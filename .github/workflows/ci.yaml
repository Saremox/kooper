name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    # Execute the checks inside the container instead the VM.
    container: golangci/golangci-lint:v1.50.0-alpine
    steps:
      - uses: actions/checkout@v3
      - run: ./hack/scripts/check.sh

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - run: make ci-unit-test

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: [check, unit-test]
    strategy:
      matrix:
        kubernetes: [1.21.14, 1.22.15, 1.23.12, 1.24.6, 1.25.2]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Execute tests
        env:
          KIND_VERSION: v0.16.0
        run: |
          # Get dependencies.
          echo "Getting dependencies..."
          curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${{ matrix.kubernetes }}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

          # Start cluster.
          echo "Executing ${{ matrix.kubernetes }} Kubernetes tests..."
          KUBERNETES_VERSION=${{ matrix.kubernetes }} make ci-integration-test  



